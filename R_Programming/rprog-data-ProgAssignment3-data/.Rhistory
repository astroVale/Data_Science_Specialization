a <- available.packages()
available.packages()
head(rownames(a),3)
install.packages("KernSmooth")
packageDescription('KernSmooth')
library(KernSmooth)
x <- c(4, TRUE)
x
x <- c(1, 3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x == 4] > 10
x[x >= 11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x == 4] > 10
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
install.packages("XML")
library(XML)
install.packages("jsonlite")
library(jsonlite)
library(data.table)
install.packages("data.table")
R.version.string
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
library(datasets)
data(iris)
?iris
iris
iris[1:6, ]
s <= split(iris, iris$Species)
s <- split(iris, iris$Species)
s
lapply(s, function(x)  colMeans(x, c("Sepal.Length")))
sapply(s, function(x)  colMeans(x[, c("Sepal.Length")]))
sapply(s, function(x)  colMeans(x[c("Sepal.Length")]))
lapply(s, function(x)  colMeans(x[c("Sepal.Length")]))
colMeans(iris)
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars[1:6, ]
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
debug(ls)
ls
ls()
}
#also creates the Xinv variable which holds the inverse when needed
makeCacheMatrix <- function(myX = matrix()) {
Xinv <<- NULL
X <<- myX
##also creates the Xinv variable which holds the inverse when needed
makeCacheMatrix <- function(myX = matrix()) {
Xinv <<- NULL
}
source('~/ass1.R')
mat <- matrix(data = c(4,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
mat <- matrix(data = c(9,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
mat <- matrix(data = c(3,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
source('~/ass1.R')
mat <- matrix(data = c(3,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
source('~/ass1.R')
csh<<-makeCacheMatrix()
source('~/ass1.R')
cacheSolve(mat2)
source('~/ass1.R')
mat <- matrix(data = c(3,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
mat <- matrix(data = c(3,2,7,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
source('~/ass1.R')
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/ass1.R')
cacheSolve(mat2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
source('~/ass1.R')
mat <- matrix(data = c(5,8,100,6), nrow = 2, ncol = 2)
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
cacheSolve(mat2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
summary(y)
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
y <- 3
x1 <- 5
x2 <- 1
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof(by.self)
summaryRprof()
Rprof()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
lenght(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Valentina")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!TRUE == (5 == 7)
!TRUE == !(5 == 7)
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
as.list(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t2 <- "October 17, 1986 08:24"
t2 <- c("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t2, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time() - t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
setwd("~/datasciencecoursera/rprog-data-ProgAssignment3-data")
rankhospital("MD", "heart failure", 5)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
rankhospital("MD", "heart failure", 5)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("TX", "heart attack")
rankhospital("MD", "heart failure", 5)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
head(rankall("heart attack", 20), 10)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
head(rankall("heart attack", 20), 10)
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
data$state
data[data$state]
data$State
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
head(rankall("heart attack", 20), 10)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
head(rankall("heart attack", 20), 10)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rank2.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("heart failure"), 10)
submit()
submit()
submit()
